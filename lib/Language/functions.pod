=begin pod

=TITLE Functions

=SUBTITLE Functions and Functional Programming in Perl 6

TODO

=head1 Defining/Creating/Using Functions

TODO
=comment sub, &

=comment my, our sub

=head2 Blocks and Lambdas

TODO
=comment for, if take blocks/lambdas

=comment link to Block documentation (?)

=head2 Multi-dispatch

TODO
=comment multi, proto, {*}, only

=head2 Signatures

The arguments that a function accepts are described in its I<signature>.

=for code :allow<B>
sub formatB<(Str $s)> { ... }
-> B<$a, $b> { ... }

Details about the syntax and use of signatures can be found in the
L<documentation on the C<Signature> class|Signature>.

=comment capture, destructuring,

=head2 Parameters

TODO
=comment prefix:<|>, pair-chaining, \()

=head1 Functions are First-Class Objects

TODO
=comment e.g. `@list.sort :&as`, closures, lexical subs

=comment return from sub and return from block

=comment method invoke { ... }

=head2 Routines

TODO
=comment Important ones: candidates, wrap, unwrap, assuming, arity, count

=comment link to Routine documentation (?)

=head1 Defining Operators

TODO

=head2 Precedence

TODO
=comment trait-mods, tighter, equiv, etc.

=head1 Trait-mods

TODO
=comment cached, hidden_from_backtrace, pure, export, rw, DEPRECATED

=end pod
